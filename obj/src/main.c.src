	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_rand_range
_rand_range:
	ld	hl, -3
	call	__frameset
	ld	hl, 0
	push	hl
	call	_time
	pop	bc
	push	de
	push	hl
	call	_srandom
	pop	hl
	pop	hl
	call	_random
	ld	(ix - 3), hl
	ld	hl, 1
	ld	bc, (ix + 6)
	or	a, a
	sbc	hl, bc
	ld	bc, (ix + 9)
	add	hl, bc
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	iy
	ld	hl, (ix - 3)
	ld	a, iyl
	call	__lremu
	ld	de, (ix + 6)
	add	hl, de
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw_frame
_draw_frame:
	ld	hl, -15
	call	__frameset
	ld	hl, 1
	ld	de, _game
	ld	(ix - 3), de
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	bc, 40
	ld	de, 0
BB1_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB1_10
	ld	(ix - 9), de
	ex	de, hl
	ld	c, 3
	call	__ishl
	ld	(ix - 15), hl
	ld	iy, (ix - 3)
	or	a, a
	sbc	hl, hl
BB1_3:
	ld	(ix - 6), hl
	ld	de, 240
	or	a, a
	sbc	hl, de
	jq	z, BB1_4
	ld	(ix - 12), iy
	ld	iy, (iy)
	lea	hl, iy
	ld	de, 1
	or	a, a
	sbc	hl, de
	ld	a, 7
	ld	l, a
	jq	z, BB1_8
	lea	hl, iy
	ld	de, 2
	or	a, a
	sbc	hl, de
	ld	hl, 6
	ex	de, hl
	ld	hl, (ix - 6)
	jq	nz, BB1_9
	ld	a, -64
	ld	l, a
BB1_8:
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 6
	push	hl
	ld	hl, 8
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_gfx_FillRectangle
	ld	de, 6
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
BB1_9:
	add	hl, de
	ld	iy, (ix - 12)
	lea	iy, iy + 3
	jq	BB1_3
BB1_4:
	ld	de, (ix - 9)
	inc	de
	ld	iy, (ix - 3)
	lea	iy, iy + 120
	ld	(ix - 3), iy
	ld	bc, 40
	jq	BB1_1
BB1_10:
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_generate_frame
_generate_frame:
	ld	hl, -3
	call	__frameset
	ld	iy, _game
	xor	a, a
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	(_game), a
	lea	hl, iy
	inc	hl
	ld	bc, 4799
	ex	de, hl
	lea	hl, iy
	ldir
	ld	hl, (_apple_pos)
	ld	de, (_apple_pos+3)
	ld	bc, 120
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, 3
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, 2
	ld	(iy), hl
	ld	bc, 9000
BB2_1:
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jq	z, BB2_4
	ld	de, (ix - 3)
	ld	iy, _snake
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_4
	ld	de, (ix - 3)
	ld	iy, _snake
	add	iy, de
	ld	hl, (iy + 3)
	ld	de, (iy + 6)
	ld	bc, 120
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _game
	add	iy, bc
	ex	de, hl
	ld	bc, 3
	call	__imulu
	ld	bc, 9000
	push	hl
	pop	de
	add	iy, de
	ld	hl, 1
	ld	(iy), hl
	ld	de, 9
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	jq	BB2_1
BB2_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_set_apple_pos
_set_apple_pos:
	ld	hl, 2
	ld	de, 38
	push	de
	push	hl
	call	_rand_range
	pop	de
	pop	de
	ld	(_apple_pos), hl
	ld	hl, 38
	push	hl
	ld	hl, 2
	push	hl
	call	_rand_range
	pop	de
	pop	de
	ld	(_apple_pos+3), hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_checkinput
_checkinput:
	call	_os_GetCSC
	ld	de, (_direction)
	cp	a, 4
	jq	nz, BB4_4
	ld	bc, 3
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB4_4
	ld	hl, 1
	jq	BB4_3
BB4_4:
	cp	a, 1
	jq	nz, BB4_7
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB4_7
	ld	hl, 3
	jq	BB4_3
BB4_7:
	cp	a, 2
	jq	nz, BB4_10
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB4_10
	or	a, a
	sbc	hl, hl
	jq	BB4_3
BB4_10:
	cp	a, 3
	jq	nz, BB4_13
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB4_13
	ld	hl, 2
BB4_3:
	ld	(_direction), hl
	ret
BB4_13:
	cp	a, 15
	jq	nz, BB4_15
	or	a, a
	sbc	hl, hl
	ld	(_game_looping), hl
BB4_15:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_check_apple_hit
_check_apple_hit:
	ld	hl, -6
	call	__frameset
	ld	de, 0
	ld	hl, (_snake+3)
	ld	bc, (_apple_pos)
	ld	(ix - 3), hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_7
	ld	hl, (_snake+6)
	ld	bc, (_apple_pos+3)
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_7
	ld	hl, (_snake_len)
	inc	hl
	ld	(_snake_len), hl
	ld	hl, (_score)
	inc	hl
	ld	(_score), hl
	ld	bc, 9009
	ld	(ix - 3), de
BB5_3:
	ld	hl, (ix - 3)
	ld	de, 9
	add	hl, de
	push	hl
	pop	de
	or	a, a
	sbc	hl, bc
	jq	z, BB5_6
	ld	iy, _snake
	ld	bc, (ix - 3)
	add	iy, bc
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), de
	ld	bc, 9009
	jq	nz, BB5_3
	ld	iy, _snake
	add	iy, de
	ld	hl, 1
	ld	(iy - 9), hl
BB5_6:
	call	_set_apple_pos
	ld	hl, (_snake+3)
	ld	(ix - 3), hl
	ld	de, 0
BB5_7:
	ld	hl, (_snake+6)
	ld	(ix - 6), hl
	ld	bc, 8991
BB5_8:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	z, BB5_14
	push	de
	pop	bc
	ld	iy, _snake
	add	iy, bc
	ld	hl, (iy + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB5_14
	push	de
	pop	bc
	ld	iy, _snake
	add	iy, bc
	ld	bc, (iy + 12)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_13
	push	de
	pop	bc
	ld	iy, _snake
	add	iy, bc
	ld	bc, (iy + 15)
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, bc
	jq	nz, BB5_13
	or	a, a
	sbc	hl, hl
	ld	(_game_looping), hl
BB5_13:
	ld	bc, 9
	ex	de, hl
	add	hl, bc
	ld	bc, 8991
	ex	de, hl
	jq	BB5_8
BB5_14:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_move_snake
_move_snake:
	ld	hl, -9018
	call	__frameset
	ld	bc, -9006
	lea	iy, ix
	add	iy, bc
	ld	hl, 1
	push	ix
	ld	bc, -9012
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	(iy), hl
	ld	iy, (_snake+3)
	ld	hl, (_snake+6)
	push	ix
	ld	bc, -9009
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (_direction)
	push	de
	pop	hl
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nc, BB6_1
	ld	hl, LJTI6_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB6_4:
	dec	iy
	jq	BB6_1
BB6_3:
	inc	iy
BB6_1:
	ld	bc, -9009
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB6_7:
	ld	bc, 0
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB6_9
	ld	iy, 40
BB6_9:
	ld	bc, 41
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	hl, 0
	jq	p, BB6_11
	lea	hl, iy
BB6_11:
	ld	bc, -9012
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 3), hl
	ld	bc, 40
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	jq	z, BB6_13
	push	de
	pop	bc
BB6_13:
	lea	hl, iy
	push	ix
	ld	de, -9009
	add	ix, de
	ld	(ix), hl
	pop	ix
	push	bc
	pop	hl
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB6_15
	ld	bc, 39
BB6_15:
	ld	(iy + 6), bc
	ld	bc, -9009
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	lea	hl, iy + 9
	ld	bc, -9015
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, 8991
	ld	iy, 0
	lea	hl, iy
	ld	bc, _snake+3
BB6_16:
	ld	(ix - 3), bc
	push	ix
	ld	bc, -9012
	add	ix, bc
	ld	(ix), hl
	pop	ix
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jq	z, BB6_19
	ld	(ix - 3), bc
	ld	bc, -9012
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	add	iy, de
	ld	hl, (iy - 3)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_18
	ld	(ix - 3), bc
	ld	bc, -9012
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	ix
	ld	bc, -9015
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	add	iy, de
	push	ix
	ld	bc, -9018
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	(iy), hl
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	add	iy, de
	ld	hl, (iy)
	lea	de, iy
	ld	(ix - 3), bc
	ld	bc, -9018
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 3), hl
	push	de
	pop	iy
	ld	hl, (iy + 3)
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 6), hl
	ld	bc, -9012
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 9
	add	hl, de
	ld	iy, 0
	ld	de, 8991
	ld	bc, (ix - 3)
	jq	BB6_16
BB6_18:
	ld	iy, 0
	jq	BB6_19
BB6_20:
	lea	bc, iy
	ld	de, -9012
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -9009
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	lea	hl, iy
	add	hl, bc
	push	hl
	pop	iy
	ld	de, (iy + 3)
	ld	iy, _snake
	add	iy, bc
	ld	(iy + 3), de
	lea	de, iy
	push	hl
	pop	iy
	ld	hl, (iy + 6)
	push	de
	pop	iy
	ld	(iy + 6), hl
	ld	bc, -9012
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	de, 9
	add	iy, de
BB6_19:
	ld	de, 9000
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jq	nz, BB6_20
	ld	sp, ix
	pop	ix
	ret
BB6_5:
	ld	bc, -9009
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	jq	BB6_7
BB6_6:
	ld	bc, -9009
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	dec	de
	jq	BB6_7
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI6_0:
	private	LJTI6_0
LJTI6_0:
	dl	BB6_4
	dl	BB6_6
	dl	BB6_3
	dl	BB6_5

	section	.text,"ax",@progbits
	public	_build_snake
_build_snake:
	ld	hl, -3
	call	__frameset
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ld	de, (_snake_len)
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	call	__setflag
	jq	p, BB7_2
	ld	de, 0
BB7_2:
	ld	iy, _snake+3
	ld	bc, 20
BB7_3:
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB7_4
	ld	hl, 1
	ld	(iy - 3), hl
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(iy), hl
	ld	(iy + 3), bc
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	dec	de
	lea	iy, iy + 9
	jq	BB7_3
BB7_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	call	_gfx_Begin
	call	_build_snake
	call	_set_apple_pos
BB8_1:
	ld	hl, (_game_looping)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB8_3
	call	_checkinput
	call	_check_apple_hit
	call	_move_snake
	call	_generate_frame
	call	_draw_frame
	ld	hl, 75000
	push	hl
	call	_usleep
	pop	hl
	jq	BB8_1
BB8_3:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	public	_game_looping
_game_looping:
	dl	1

	section	.bss,"aw",@nobits
	public	_direction
_direction:
	rb	3

	section	.data,"aw",@progbits
	public	_snake_len
_snake_len:
	dl	15

	section	.bss,"aw",@nobits
	public	_score
_score:
	rb	3

	section	.bss,"aw",@nobits
	public	_game
_game:
	rb	4800

	section	.bss,"aw",@nobits
	public	_apple_pos
_apple_pos:
	rb	6

	section	.bss,"aw",@nobits
	public	_snake
_snake:
	rb	9000

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__lremu
	extern	_gfx_Begin
	extern	_usleep
	extern	__ishl
	extern	_gfx_SetDraw
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	_srandom
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_os_GetCSC
	extern	_gfx_End
	extern	_time
